---
- set_fact:
    ansible_distro: "{{ ansible_facts.distribution|lower|replace('\"', '') }}"
  tags:
    - always

- name: gather os specific variables
  include_vars: "{{ item }}"
  ignore_errors: yes
  with_first_found:
    - files:
      - "{{ ansible_distro }}-{{
            ansible_facts.distribution_version|lower|replace('/', '_') }}.yml"
      - "{{ ansible_distro }}-{{ ansible_facts.distribution_release }}.yml"
      - "{{ ansible_distro }}-{{
            ansible_facts.distribution_major_version|lower|replace('/', '_') }}.yml"
      - "{{ ansible_distro }}.yml"
      - "{{ ansible_facts.os_family|lower }}.yml"
      paths:
        - "../vars"
  tags:
    - always

- name: ensure ntp package is absent
  package:
    name: ntp
    state: absent
  tags:
    - chrony
    - time
    - package
    - service
    - install

- name: ensure chrony requirements packages are installed
  package:
    name: "{{ item }}"
    state: "{{ chrony_package_state }}"
  with_items: "{{ chrony_pre_packages }}"
  when: chrony_pre_packages|length > 0
  tags:
    - chrony
    - time
    - package
    - service
    - install

- name: ensure chrony packages are installed
  package:
    name: "{{ item }}"
    state: "{{ chrony_package_state }}"
  with_items: "{{ chrony_packages }}"
  when: chrony_packages|length > 0
  tags:
    - chrony
    - time
    - package
    - service
    - install

- name: update chrony.conf from template
  template:
    src: chrony.conf
    dest: "{{ chrony_config_path }}"
    owner: root
    group: root
    mode: 0644
    backup: yes
  register: chrony_conf
  tags:
    - chrony
    - time
    - package
    - config

- name: ensure chrony service is restarted if necessary
  service:
    name: "{{ item }}"
    state: restarted
  with_items: "{{ chrony_services }}"
  when: chrony_services|length > 0 and chrony_conf is changed
  tags:
    - chrony
    - time
    - package
    - service
    - install

- name: ensure chrony service is started and enabled
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
  with_items: "{{ chrony_services }}"
  when: chrony_services|length > 0
  tags:
    - chrony
    - time
    - package
    - service
    - install

# vim: syntax=yaml ts=2 sw=2 et sr softtabstop=2 autoindent
